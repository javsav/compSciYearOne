                 Original Vectors                                     Expected Output                                             Matlab Output
     A                                      B                               C                                                          C
 [1, 3, 5]                              [2, 4, 6]                    1, 2, 3, 4, 5, 6                                          1, 2, 3, 4, 5, 6
[1.743 , "fish" , 5.19, -10]    [1.33, 2.33, 3.66, "centaur"]      2, 1, fish, 2, 5, 4, -10, centaur                         2, 1, NaN, 2, 5, 4, -10, NaN
 ['x':'z']                          [23.33 : -1 : 20.33]       1, -1, 101, -101, 201, -201, 301, -301, 401, -401      1, -1, 101, -101, 201, -201, 301, -301, 401, -401

I am again using vectors instead of cells for the case of simplicity of iteration

Test case 1 is a simple test of two vectors which when interleaved will contain all natural numbers within the series from 1:6 inclusive, confirming that the script is working correctly.

I was surprised with test case 2, because I expected it to perform type coercion as in question 2b. However, I believe the difference here is that we are appending to an array
of all zeros. As such, the class of the array is already set to 'double', so coercion of floats or integers to strings does not occur here, hence the strings are displayed as 
NaN (Not a Number). Test case 2 also tests whether numbers are accurately rounded to the closest integer, which they are. If vector C was initialised as string array this may have
a different result. Whereas question 2b involved appending a vector to an existing vector, this question involves replacing indices (zeros) of a vector C with values from two other vectors,
which is likely the cause of the discrepancy.

Test case 3 tests whether ranges of integers work, in addition to testing negative ranges and negative integers, which are output correctly as expected. Each positive integer has a matching
negative integer (positive integer * - 1) which makes the result easily and quickly verifiable.