        Original                    Expected Result                                             Matlab Result
         Years                         leapYears                                                  leapYears
     [1014 : 1036]               1016, 1020, 1024, 1028, 1032, 1036                       1016, 1020, 1024, 1028, 1032, 1036
        [0 : 33]                    4, 8, 12, 16, 20, 24, 28, 32                           4, 8, 12, 16, 20, 24, 28, 32
      [-455: -419]     -452, -448, -444, -440, -436, -432, -428, -424, -420       -452, -448, -444, -440, -436, -432, -428, -424, -420

Test case 1 tests positive years from the early eleventh century and the expected result matches the Matlab Result

Test case 2 includes the year 0 in order to ensure that it is not included as a leap year as per line 9 of the code

Test case 3 tests for a range of negative years (BCE). This is to ensure that Matlab correctly calculates leap years for negative years (even if they
were not in use at the time), it displays the functionality of the script.

It should be noted that if a year is evenly divisible by 4 and 100 but not 400, then it is not a leap year, e.g. 1800. None of any such years were included
in my test cases as I did not code for them, although it would not be too difficult to do so, following similar principles as established for years
divisible by 4, and using elseif statements, in the correct order.