count                                                     temperatures                                                                                                                                      expected temperatures                                                                              actual temperatures
 1                                                            37.5                                                                                                                                                  37.5                                                                                            37.5                                                     
 20                 0 -20.5 -33.2 40.5 12.4497230280902 3 9.2 3.6 4.4 5.5 6.5 7.4 15.49 17.51 45.4999 -10.01 -15.4999999 17.223 24 22                                   22.0 24.0 17.2 -15.5 -10.0 45.5 17.5 15.5 7.4 6.5 5.5 4.4 3.6 9.2 3.0 12.4 40.5 -33.2 -20.5 0.0         22.0 24.0 17.2 -15.5 -10.0 45.5 17.5 15.5 7.4 6.5 5.5 4.4 3.6 9.2 3.0 12.4 40.5 -33.2 -20.5 0.0    
 0                                                                                                                                                                                 ERROR: Number of temperatures must be greater than zero. ABORTING PROGRAM.                               ERROR: Number of temperatures must be greater than zero. ABORTING PROGRAM.
999999999999999999                                                                                                                                            ERROR: Memory allocation failed! Please try running the program again and inputting a smaller number. ABORTING PROGRAM.       ERROR: Number of temperatures must be greater than zero. ABORTING PROGRAM.                                                   
  5                                                         8 0 0 8 5                                                                                                                                       5.0 8.0 0.0 0.0 8.0                                                                               5.0 8.0 0.0 0.0 8.0            
 300000                                                       4.4 a                                                                                                                      ERROR: Invalid input: letter or character. ABORTING PROGRAM.                                                   ERROR: Invalid input: letter or character. ABORTING PROGRAM.
  a                                                                                                                                                                           ERROR: Invalid input: letter, character, or excessively large number. ABORTING PROGRAM.                    ERROR: Invalid input: letter, character, or excessively large number. ABORTING PROGRAM.
  -1                                                                                                                                                                                 ERROR: Number of temperatures must be greater than zero. ABORTING PROGRAM.                                 ERROR: Number of temperatures must be greater than zero. ABORTING PROGRAM.
  2                                                        -273.15 15000000                          -                                                                                                            15000000.0 -273.2                                                                                    5000000.0 -273.1 
 '!'                                                                                                                                                                             ERROR: Invalid input: letter, character, or excessively large number. ABORTING PROGRAM.               ERROR: Invalid input: letter, character, or excessively large number. ABORTING PROGRAM.                        

The first test case is a simple test of the program to 'reverse' a series of one temperature. Essentially, seeing if the reverse iteration would confuse the output. As expected, it had no effect, because it was iterating from the 0th index of the array to the 0th index.
The second test case was a test of the rounding accuracy of the program. Ever temperature was rounded as expected to one decimal place, despite the fact that C can sometimes round incorrectly when numbers are very close to the rounding point, due to the relative inaccuracy of a float compared to a double, and the way that decimal numbers are represented in binary.
The third test case was a boundary case, with a temperature count of zero, testing if the program would call the correct error, that the number of temperatures chosen to enter must be greater than zero, and abort, which it did as expected.
The fourth test case was the first to not respond as expected; I had assumed that a memory allocation error would be called. However, because the conditional statement about the number of temperatures being greater than zero was that assessing whether the array == NULL, the input of such a large number made the program use the default value of numberOfTemps, 0.
  This meant that it acted as if 0 had been entered, like in test case 2, rather than complaining about memory allocation. Regardless, the program still correctly aborted, but showed a different error message to what I was expecting.
The fifth test case is a simple check that the program is able to take whole number temperatures, add a decimal place to them, and reverse the order in which they are entered, which it does as expected for five temperatures entered.
The sixth test case was of a large number of temperatures to be input, but the second temperature input is expected to throw an error about an invalid temperature being input, which it does, and the program aborts as expected.
The seventh test case was somewhat similar, except instead of the character being input into the list of temperatures, it was input as the number of temperatures to input. The program correctly complains that the input form was invalid and aborts, as expected.
The eight test case was similar to the third, just that negative one was input this time instead of zero, to test that the error was still thrown, and as expected, it was.
The ninth test case test simply tested the lowest possible temperature in Celsius, -273.15, which is equivalent to 0 degrees Kelvin, and the temperature of the core of the sun, 15 million degrees Celsius. Here, the program surprisingly did not round up the .15 to .2, but rounded down to .1 This is again likely due to the binary representation of floats, and the behaviour is unpredictable in C.
  I tried using the roundf function from the math.h library, and it did not improve the output.
The tenth test case tests a character in single quotes, to see if the ASCII value of the character was interpreted, but as expected, the program detected that the scanf input was not an integer, and threw an error and aborted.