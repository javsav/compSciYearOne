Inputs                                                                    Expected maximum, minimum, average.                                                                 Actual maximum,  minimum,  average.
24 25 60 70 98 101 69 44 21 18                                                         101     18      53.0                                                                               101     18         53.0
0  0  0  0  0   0  0  0  0  0                                                           0       0       0.0                                                                                0       0          0.0
100 50 100 50 -1                                                                       100      50     75.0                                                                               100      50        75.0
33 17 22 160                                                       No values returned - error is thrown and user repromtped.            ERROR: Invalid age entered (Age less than -1 or age greater than 150); Please re-enter the set of 10 ages. Enter -1 to terminate age entry early.
17 -2                                                              No values returned - error is thrown and user repromtped             ERROR: Invalid age entered (Age less than -1 or age greater than 150); Please re-enter the set of 10 ages. Enter -1 to terminate age entry early.
100 100 100 100 -2 -2 -2 -2 -2 100 100 100 100 100 100 100                            100      100     100.0                                                                              100      100       100.0
140 141 142 143 144 145 146 147 148 149                                               149      140     144.5                                                                              149      140       144.5
-1                                                                            Error is thrown and program aborts.                       ERROR: You did not enter any ages. Please enter up to ten ages, with -1 as the final age if you with to terminate your entry early. ABORTING PROGRAM.
0 0 0 1 2 3 -1                                                                         3        0       1.0                                                                                 3        0       1.0
9999999999999999999999999999999999999999999999999999999999999999999   Value is larger than int type allows, so program defaults to 0.   ERROR: You did not enter any ages. Please enter up to ten ages, with -1 as the final age if you with to terminate your entry early. ABORTING PROGRAM.

Test case one tests for a normal input of 10 valid ages. The script returns the maximum, minimum, and average accurately, as expected.  
Test case two tests whether the script can handle both sorting by zero, and division of zero by another number to calculate the average of 0, which it succeeds in successfuly.
Test case three tests whether the early termination of the script with an entry of negative one for the fifth age results in correct calculations of the maximum, minimum, and average, of the prior four ages, which the script handles correctly.
Test case four tests for the relability of the while loop to notice invalid entries (greater than 150), and reprompt the user for an age, which it achieves successfully.
Test case five similarly does this, but for a number less than -1 (-2), and the script works as expect.
As an extension of this, test case six tests whether after several entries of -2, the script is still able to continue receiving valid entries and calculating their statistics, which it does - despite five -2s being entered, the script still disregards the invalid entries and uses the 100s as the dataset.
Test case seven tests for the largest possible series of ten numbers (140...149) that can be entered, and the script successfully handles the execution and calculations of the statistics as expected.
Test case eight tests a boundary case of entering -1 as the first age, which means that the program throws an error message due to the if statement checking ageCount == 0, and aborts the program, as expected.
Test case nine tests averaging with zeros in addition to other numbers. We have six ages entered, including three zeroes, and the other ages add up to six. As such, the average is expected to calculate at 6/6 - 1.0, which it does accurately.
Test case ten tests another boundary case, a very large integer, which is larger than the int type cast to age allows. I expected this to default to the defined value of age as defined as 0, but it seems to be returning a -1, causing the program to terminate early as in test case nine. 
Using a long long int could help prevent this, but not necessary for ages (using unsigned integers is not viable because of the need for -1 to terminate the progrma.)